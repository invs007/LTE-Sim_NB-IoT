/*
 * M2MEventDriven.cpp
 *
 *  Created on: 08/11/2016
 *      Author: great
 */

#include "M2MEventDrivenV2.h"
#include "../../core/eventScheduler/simulator.h"
#include "../../utility/RandomVariable.h"
#include "../radio-bearer.h"
#include <math.h>
#include <stdlib.h>
#define MAX_TTI 840

const double M2MEventDrivenV2::P[] = { 0.0, 0.004987521, 0.009950166, 0.01488806,
		0.019801327, 0.024690088, 0.029554466, 0.034394584, 0.039210561,
		0.044002518, 0.048770575, 0.053514852, 0.058235466, 0.062932537,
		0.06760618, 0.072256514, 0.076883654, 0.081487716, 0.086068815,
		0.090627066, 0.095162582, 0.099675477, 0.104165865, 0.108633856,
		0.113079563, 0.117503097, 0.121904569, 0.126284088, 0.130641765,
		0.134977707, 0.139292024, 0.143584823, 0.147856211, 0.152106296,
		0.156335183, 0.160542979, 0.164729789, 0.168895716, 0.173040866,
		0.177165342, 0.181269247, 0.185352684, 0.189415754, 0.19345856,
		0.197481202, 0.201483781, 0.205466397, 0.20942915, 0.213372139,
		0.217295462, 0.221199217, 0.225083502, 0.228948414, 0.23279405,
		0.236620506, 0.240427877, 0.244216259, 0.247985746, 0.251736432,
		0.255468413, 0.259181779, 0.262876626, 0.266553044, 0.270211126,
		0.273850963, 0.277472646, 0.281076267, 0.284661914, 0.288229677,
		0.291779647, 0.29531191, 0.298826557, 0.302323674, 0.305803349,
		0.309265669, 0.312710721, 0.316138591, 0.319549364, 0.322943126,
		0.326319961, 0.329679954, 0.333023189, 0.33634975, 0.339659719,
		0.34295318, 0.346230215, 0.349490905, 0.352735333, 0.355963579,
		0.359175724, 0.362371848, 0.365552032, 0.368716354, 0.371864895,
		0.374997732, 0.378114944, 0.381216608, 0.384302803, 0.387373606,
		0.390429093, 0.39346934, 0.396494425, 0.399504421, 0.402499405,
		0.405479452, 0.408444636, 0.41139503, 0.41433071, 0.417251748,
		0.420158217, 0.42305019, 0.425927739, 0.428790936, 0.431639853,
		0.434474561, 0.437295131, 0.440101633, 0.442894138, 0.445672715,
		0.448437434, 0.451188364, 0.453925573, 0.456649131, 0.459359105,
		0.462055562, 0.464738571, 0.467408199, 0.470064512, 0.472707576,
		0.475337458, 0.477954223, 0.480557937, 0.483148666, 0.485726472,
		0.488291422, 0.490843579, 0.493383008, 0.49590977, 0.498423931,
		0.500925552, 0.503414696, 0.505891426, 0.508355803, 0.510807888,
		0.513247744, 0.515675431, 0.51809101, 0.520494541, 0.522886084,
		0.5252657, 0.527633447, 0.529989385, 0.532333573, 0.534666069,
		0.536986932, 0.539296219, 0.541593989, 0.543880298, 0.546155205,
		0.548418765, 0.550671036, 0.552912073, 0.555141934, 0.557360673,
		0.559568345, 0.561765008, 0.563950714, 0.566125519, 0.568289477,
		0.570442642, 0.572585068, 0.574716809, 0.576837918, 0.578948447,
		0.581048451, 0.58313798, 0.585217088, 0.587285827, 0.589344247,
		0.591392401, 0.59343034, 0.595458115, 0.597475776, 0.599483374,
		0.601480959, 0.603468581, 0.60544629, 0.607414134, 0.609372165,
		0.611320429, 0.613258977, 0.615187855, 0.617107114, 0.6190168,
		0.620916962, 0.622807646, 0.624688901, 0.626560773, 0.628423309,
		0.630276555, 0.632120559, 0.633955365, 0.63578102, 0.63759757,
		0.63940506, 0.641203535, 0.642993039, 0.644773619, 0.646545318,
		0.648308181, 0.650062251, 0.651807573, 0.65354419, 0.655272145,
		0.656991483, 0.658702245, 0.660404474, 0.662098214, 0.663783506,
		0.665460393, 0.667128916, 0.668789118, 0.670441039, 0.672084721,
		0.673720205, 0.675347533, 0.676966744, 0.678577879, 0.680180978,
		0.681776082, 0.683363231, 0.684942463, 0.686513819, 0.688077338,
		0.689633059, 0.69118102, 0.692721261, 0.694253821, 0.695778736,
		0.697296046, 0.698805788, 0.700308, 0.701802721, 0.703289986,
		0.704769833, 0.7062423, 0.707707422, 0.709165238, 0.710615782,
		0.712059092, 0.713495203, 0.714924152, 0.716345974, 0.717760704,
		0.719168378, 0.720569032, 0.7219627, 0.723349416, 0.724729217,
		0.726102136, 0.727468207, 0.728827465, 0.730179944, 0.731525677,
		0.732864698, 0.734197041, 0.735522739, 0.736841825, 0.738154331,
		0.739460292, 0.740759739, 0.742052706, 0.743339223, 0.744619324,
		0.74589304, 0.747160404, 0.748421447, 0.7496762, 0.750924695,
		0.752166964, 0.753403036, 0.754632944, 0.755856717, 0.757074387,
		0.758285983, 0.759491537, 0.760691078, 0.761884636, 0.763072241,
		0.764253923, 0.765429712, 0.766599636, 0.767763725, 0.768922009,
		0.770074515, 0.771221273, 0.772362312, 0.773497659, 0.774627344,
		0.775751395, 0.77686984, 0.777982706, 0.779090022, 0.780191815,
		0.781288113, 0.782378943, 0.783464333, 0.784544309, 0.785618899,
		0.786688129, 0.787752026, 0.788810617, 0.789863929, 0.790911987,
		0.791954818, 0.792992447, 0.794024902, 0.795052207, 0.796074388,
		0.797091471, 0.798103482, 0.799110445, 0.800112386, 0.80110933,
		0.802101301, 0.803088325, 0.804070426, 0.805047629, 0.806019958,
		0.806987437, 0.807950091, 0.808907944, 0.80986102, 0.810809342,
		0.811752934, 0.812691821, 0.813626024, 0.814555568, 0.815480476,
		0.816400771, 0.817316476, 0.818227614, 0.819134207, 0.820036279,
		0.820933852, 0.821826948, 0.82271559, 0.8235998, 0.824479599,
		0.825355011, 0.826226057, 0.827092758, 0.827955136, 0.828813214,
		0.829667011, 0.830516551, 0.831361853, 0.832202939, 0.83303983,
		0.833872548, 0.834701112, 0.835525543, 0.836345863, 0.837162092,
		0.837974249, 0.838782356, 0.839586432, 0.840386498, 0.841182574,
		0.841974679, 0.842762834, 0.843547057, 0.84432737, 0.84510379,
		0.845876338, 0.846645033, 0.847409894, 0.848170941, 0.848928191,
		0.849681665, 0.850431381, 0.851177357, 0.851919613, 0.852658167,
		0.853393038, 0.854124243, 0.854851802, 0.855575731, 0.85629605,
		0.857012777, 0.857725928, 0.858435523, 0.859141579, 0.859844113,
		0.860543144, 0.861238688, 0.861930763, 0.862619386, 0.863304575,
		0.863986346, 0.864664717, 0.865339704, 0.866011325, 0.866679597,
		0.867344535, 0.868006157, 0.868664479, 0.869319517, 0.869971289,
		0.87061981, 0.871265096, 0.871907164, 0.87254603, 0.873181709,
		0.873814218, 0.874443573, 0.875069788, 0.87569288, 0.876312864,
		0.876929756, 0.877543572, 0.878154326, 0.878762034, 0.87936671,
		0.879968371, 0.880567032, 0.881162706, 0.88175541, 0.882345157,
		0.882931963, 0.883515842, 0.884096809, 0.884674879, 0.885250065,
		0.885822383, 0.886391846, 0.886958469, 0.887522266, 0.888083251,
		0.888641438, 0.889196842, 0.889749475, 0.890299351, 0.890846486,
		0.891390891, 0.891932581, 0.89247157, 0.89300787, 0.893541496,
		0.89407246, 0.894600775, 0.895126456, 0.895649515, 0.896169965,
		0.89668782, 0.897203092, 0.897715793, 0.898225938, 0.898733538,
		0.899238607, 0.899741156, 0.900241199, 0.900738748, 0.901233816,
		0.901726414, 0.902216556, 0.902704253, 0.903189517, 0.903672362,
		0.904152798, 0.904630838, 0.905106493, 0.905579777, 0.9060507,
		0.906519274, 0.906985511, 0.907449422, 0.90791102, 0.908370316,
		0.908827321, 0.909282047, 0.909734504, 0.910184705, 0.910632661,
		0.911078383, 0.911521881, 0.911963167, 0.912402253, 0.912839149,
		0.913273865, 0.913706414, 0.914136805, 0.914565049, 0.914991158,
		0.915415141, 0.91583701, 0.916256774, 0.916674445, 0.917090033,
		0.917503549, 0.917915001, 0.918324402, 0.918731761, 0.919137088,
		0.919540393, 0.919941687, 0.92034098, 0.920738281, 0.9211336,
		0.921526948, 0.921918334, 0.922307768, 0.92269526, 0.923080819,
		0.923464455, 0.923846177, 0.924225996, 0.92460392, 0.92497996,
		0.925354124, 0.925726422, 0.926096863, 0.926465456, 0.926832211,
		0.927197137, 0.927560243, 0.927921538, 0.928281031, 0.92863873,
		0.928994646, 0.929348787, 0.929701161, 0.930051778, 0.930400646,
		0.930747775, 0.931093172, 0.931436846, 0.931778806, 0.932119061,
		0.932457618, 0.932794487, 0.933129676, 0.933463193, 0.933795047,
		0.934125246, 0.934453797, 0.93478071, 0.935105993, 0.935429653,
		0.935751699, 0.936072139, 0.93639098, 0.936708232, 0.937023901,
		0.937337995, 0.937650523, 0.937961493, 0.938270911, 0.938578786,
		0.938885126, 0.939189937, 0.939493229, 0.939795008, 0.940095281,
		0.940394057, 0.940691343, 0.940987146, 0.941281474, 0.941574334,
		0.941865733, 0.942155679, 0.942444179, 0.94273124, 0.943016869,
		0.943301073, 0.94358386, 0.943865237, 0.94414521, 0.944423787,
		0.944700975, 0.94497678, 0.945251209, 0.94552427, 0.945795969,
		0.946066313, 0.946335308, 0.946602962, 0.946869281, 0.947134271,
		0.94739794, 0.947660294, 0.947921339, 0.948181083, 0.948439531,
		0.94869669, 0.948952566, 0.949207166, 0.949460496, 0.949712563,
		0.949963373, 0.950212932, 0.950461246, 0.950708321, 0.950954165,
		0.951198782, 0.951442179, 0.951684362, 0.951925337, 0.952165111,
		0.952403688, 0.952641076, 0.952877279, 0.953112305, 0.953346158,
		0.953578845, 0.953810372, 0.954040743, 0.954269966, 0.954498046,
		0.954724988, 0.954950798, 0.955175481, 0.955399045, 0.955621493,
		0.955842832, 0.956063066, 0.956282203, 0.956500246, 0.956717202,
		0.956933076, 0.957147873, 0.957361599, 0.957574259, 0.957785858,
		0.957996402, 0.958205896, 0.958414345, 0.958621754, 0.958828129,
		0.959033475, 0.959237796, 0.959441098, 0.959643387, 0.959844666,
		0.960044942, 0.960244218, 0.960442501, 0.960639795, 0.960836105,
		0.961031436, 0.961225792, 0.961419179, 0.961611602, 0.961803065,
		0.961993573, 0.962183131, 0.962371743, 0.962559415, 0.962746151,
		0.962931955, 0.963116833, 0.963300788, 0.963483826, 0.963665951,
		0.963847168, 0.964027481, 0.964206895, 0.964385414, 0.964563042,
		0.964739785, 0.964915646, 0.96509063, 0.965264741, 0.965437984,
		0.965610363, 0.965781882, 0.965952545, 0.966122358, 0.966291323,
		0.966459446, 0.96662673, 0.96679318, 0.9669588, 0.967123593,
		0.967287565, 0.967450719, 0.967613059, 0.96777459, 0.967935315,
		0.968095238, 0.968254364, 0.968412696, 0.968570238, 0.968726995,
		0.968882969, 0.969038166, 0.969192589, 0.969346242, 0.969499128,
		0.969651252, 0.969802617, 0.969953227, 0.970103086, 0.970252197,
		0.970400565, 0.970548193, 0.970695084, 0.970841243, 0.970986673,
		0.971131377, 0.97127536, 0.971418625, 0.971561175, 0.971703015,
		0.971844146, 0.971984574, 0.972124302, 0.972263332, 0.97240167,
		0.972539317, 0.972676278, 0.972812555, 0.972948153, 0.973083075,
		0.973217324, 0.973350903, 0.973483816, 0.973616066, 0.973747656,
		0.97387859, 0.974008871, 0.974138503, 0.974267487, 0.974395829,
		0.97452353, 0.974650594, 0.974777025, 0.974902825, 0.975027998,
		0.975152546, 0.975276474, 0.975399783, 0.975522477, 0.975644559,
		0.975766032, 0.9758869, 0.976007164, 0.976126829, 0.976245897,
		0.976364371, 0.976482254, 0.976599549, 0.97671626, 0.976832388,
		0.976947937, 0.977062909, 0.977177309, 0.977291137, 0.977404398,
		0.977517094, 0.977629228, 0.977740803, 0.977851821, 0.977962286,
		0.978072199, 0.978181564, 0.978290384, 0.978398662, 0.978506399,
		0.978613598, 0.978720264, 0.978826397, 0.978932, 0.979037078,
		0.979141631, 0.979245662, 0.979349175, 0.979452171, 0.979554654,
		0.979656626, 0.979758089, 0.979859046, 0.979959499, 0.980059451,
		0.980158905, 0.980257863, 0.980356327, 0.980454301, 0.980551785,
		0.980648784, 0.980745298, 0.980841331, 0.980936886, 0.981031963,
		0.981126567, 0.981220699, 0.981314361, 0.981407556, 0.981500286,
		0.981592554, 0.981684361, 0.981775711, 0.981866605, 0.981957045,
		0.982047035, 0.982136576, 0.98222567, 0.98231432, 0.982402528,
		0.982490295, 0.982577625, 0.98266452, 0.982750981, 0.982837011,
		0.982922611, 0.983007785, 0.983092534, 0.983176861, 0.983260766,
		0.983344254, 0.983427325, 0.983509981, 0.983592225, 0.98367406,
		0.983755486, 0.983836505, 0.983917121, 0.983997335, 0.984077148,
		0.984156564, 0.984235584, 0.984314209, 0.984392442, 0.984470285,
		0.98454774, 0.984624808, 0.984701492, 0.984777794, 0.984853715,
		0.984929258, 0.985004423, 0.985079214, 0.985153632, 0.985227678,
		0.985301355, 0.985374665, 0.985447609 };

M2MEventDrivenV2::M2MEventDrivenV2() {
	SetApplicationType(Application::APPLICATION_TYPE_M2M_ED);
}

M2MEventDrivenV2::~M2MEventDrivenV2() {
	Destroy();
}

void M2MEventDrivenV2::DoStart(void) {
	Simulator::Init()->Schedule(0.0, &M2MEventDrivenV2::Send, this);
}

void M2MEventDrivenV2::DoStop(void) {
}

void M2MEventDrivenV2::ScheduleTransmit(double time) {
	if ((Simulator::Init()->Now() + time) < GetStopTime()) {
		Simulator::Init()->Schedule(time, &M2MEventDrivenV2::Send, this);
	}
}

void M2MEventDrivenV2::Send(void) {
	//CREATE A NEW PACKET (ADDING UDP, IP and PDCP HEADERS)
	Packet *packet = new Packet();
	int uid = Simulator::Init()->GetUID();

	packet->SetID(uid);
	packet->SetTimeStamp(Simulator::Init()->Now());
	packet->SetSize(PKGSIZE);

	PacketTAGs *tags = new PacketTAGs();
	tags->SetApplicationType(PacketTAGs::APPLICATION_TYPE_M2M_ED);
	tags->SetApplicationSize(packet->GetSize());
	packet->SetPacketTags(tags);

	UDPHeader *udp = new UDPHeader(GetClassifierParameters()->GetSourcePort(),
			GetClassifierParameters()->GetDestinationPort());
	packet->AddUDPHeader(udp);

	IPHeader *ip = new IPHeader(GetClassifierParameters()->GetSourceID(),
			GetClassifierParameters()->GetDestinationID());
	packet->AddIPHeader(ip);

	PDCPHeader *pdcp = new PDCPHeader();
	packet->AddPDCPHeader(pdcp);

	Trace(packet);

	GetRadioBearer()->Enqueue(packet);

	int t = 1;
	double r = ((double) rand()) / RAND_MAX;
	while (r > P[t] && t < MAX_TTI)
		t++;
	ScheduleTransmit(t * 0.001);
}
